version: 2.1

orbs:
  discord: antonioned/discord@0.1.0
jobs:
  build-scala:
    working_directory: ~/athena
    docker:
      - image: circleci/openjdk:15-jdk-buster
    steps:
      - checkout
      - restore_cache:
          keys:
            - athena-backend-0-{{ checksum "build.sbt" }}
            - athena-backend-0
      - run: sbt compile
      - run: sbt assembly
      - run: sbt frontend/fullOptJS
      - persist_to_workspace:
          root: .
          paths:
            - backend/target/scala-2.13/athena-backend.jar
            - frontend/target/scala-2.13/frontend-opt.js
            - frontend/target/scala-2.13/frontend-opt.js.map
      - store_artifacts:
          path: backend/target/scala-2.13/athena-backend.jar
          destination: jar
      - save_cache:
          key: athena-backend-0-{{ checksum "build.sbt" }}
          paths:
            - backend/scala-2.13/target/resolution-cache
            - backend/scala-2.13/target/streams
            - project/target/resolution-cache
            - project/target/streams
            - ~/.sbt
            - ~/.ivy2/cache
            - ~/.m2
      - save_cache:
          key: athena-backend-0
          paths:
            - ~/.sbt
            - ~/.ivy2/cache
            - ~/.m2
  build-js:
    working_directory: ~/athena
    docker:
      - image: cimg/node:15.2.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - athena-frontend-0-{{ checksum "frontend/package-lock.json" }}
            - athena-frontend-0
      - run:
          command: npm install
          working_directory: frontend
      - run:
          command: CI=false npm run build
          working_directory: frontend
      - persist_to_workspace:
          root: .
          paths:
            - frontend/build
      - save_cache:
          key: athena-frontend-0-{{ checksum "frontend/package-lock.json" }}
          paths:
            - frontend/node_modules
      - save_cache:
          key: athena-frontend-0
          paths:
            - frontend/node_modules
  deploy-backend:
    working_directory: ~/athena
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          command: docker build -t greg2010/athena-backend .
          working_directory: backend
      - run: docker tag greg2010/athena-backend greg2010/athena-backend:${CIRCLE_BRANCH}_${CIRCLE_SHA1:0:7}
      - run: docker tag greg2010/athena-backend greg2010/athena-backend:${CIRCLE_BRANCH}_latest
      - run: docker tag greg2010/athena-backend greg2010/athena-backend:latest
      - run: docker login --username ${DOCKER_USER} --password ${DOCKER_PASSWORD}
      - run: docker push greg2010/athena-backend
      - run: apk add -U curl bash
      - discord/status:
          fail_only: false
          mentions: 'greg2010#3279'
  deploy-frontend:
    working_directory: ~/athena
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          command: docker build -t greg2010/athena-frontend .
          working_directory: frontend
      - run: docker tag greg2010/athena-frontend greg2010/athena-frontend:${CIRCLE_BRANCH}_${CIRCLE_SHA1:0:7}
      - run: docker tag greg2010/athena-frontend greg2010/athena-frontend:${CIRCLE_BRANCH}_latest
      - run: docker tag greg2010/athena-frontend greg2010/athena-frontend:latest
      - run: docker login --username ${DOCKER_USER} --password ${DOCKER_PASSWORD}
      - run: docker push greg2010/athena-frontend
      - run: apk add -U curl bash
      - discord/status:
          fail_only: false
          mentions: 'greg2010#3279'
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-scala:
          filters:
            branches:
              ignore:
                - gh-pages
      - build-js:
          requires:
            - build-scala
      - deploy-frontend:
          context: KYS-Primary
          requires:
            - build-js
      - deploy-backend:
          context: KYS-Primary
          requires:
            - build-scala
